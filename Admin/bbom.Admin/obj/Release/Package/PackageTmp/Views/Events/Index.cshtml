@using bbom.Admin.Core.Notifications
@using bbom.Data.ModelPartials.Constants
@model bbom.Data.Model.Event
<div class="panel panel-default" style="margin-top: 20px">
    <div class="panel-heading">@Model.Title @(Model.Stats == EventStatus.Run ? " Прямой эфир" : "")</div>
    <div id="player"></div>
</div>
<div>
    <div id="chat" class="panel panel-default chat">
        <div class="panel-heading" id="accordion">
            <svg class="glyph stroked two-messages"><use xlink:href="#stroked-two-messages"></use></svg> Чат
            <small class="text-muted">Смотрит: </small><small id="iterator" class="text-muted"></small>
            <button id="chatOn" onclick="chatOn()" type="button" class="btn btn-primary" style="visibility: hidden; float: right;">Включить</button>
            <button id="chatOff" onclick="chatOff()" type="button" class="btn btn-primary" style="visibility: hidden; float: right;">Выключить</button>
        </div>
        <div class="panel-body">
            <ul id="chatBody">
            </ul>
        </div>
        <div id="messagePlace" class="panel-footer" style="visibility: hidden">
            <div class="input-group">
                <input id="btn-input" type="text" class="form-control input-md" placeholder="Type your message here..." onkeydown="noLatter(event)"/>
                <span class="input-group-btn">
                    <button id="sendButton" class="button button--sacnite button--round-l"><svg class="glyph stroked arrow right"><use xlink:href="#stroked-arrow-right" /></svg></button>
                </span>
            </div>
        </div>
    </div>

</div><!--/.col-->

@section Scripts
{
    <script>
        var userItNotWatched;
        $(document).ready(function() {
            var messagePlace = $("#messagePlace");

            if (userIsRole('@UserRole.Spiker')) {
                $('#chatOn').css("visibility", "visible");
                $('#chatOff').css("visibility", "visible");
            }

            $.connection.Chat.client.addMessage = function(name, message) {
                // Добавление сообщений на веб-страницу
                $('#chatBody').append('<li class="left clearfix"><span class="chat-img pull-left"><img src="http://placehold.it/80/30a5ff/fff" alt="User Avatar" class="img-circle" /></span><div class="chat-body clearfix"><div class="header"><strong class="primary-font">' + name + '</strong></div><p>' + message + '</p></div></li>');
            };

            $.connection.Chat.client.updateIterator = function(count) {
                $('#iterator').text(count);
            };

            $.connection.Chat.client.chatOn = function() {
                $('#messagePlace').css("visibility", "visible");
            };

            $.connection.Chat.client.chatOff = function() {
                $('#messagePlace').css("visibility", "hidden");
            };

            $.connection.hub.start().done(function() {
                $.connection.Chat.server.connect("@User.Identity.Name", @Model.Id);
            });

            $('#sendButton').click(function() {
                var name = '@User.Identity.Name';
                var message = $('#btn-input').val();
                $.connection.Chat.server.send(name, message, @Model.Id);
                $('#chatBody').append('<li class="right clearfix"><span class="chat-img pull-right"><img src="http://placehold.it/80/30a5ff/fff" alt="User Avatar" class="img-circle" /></span><div class="chat-body clearfix"><div class="header"><strong class="pull-left primary-font">' + name + '</strong></div><p>' + message + '</p></div></li>');
                $('#btn-input').val('');
            });

            $.ajax({
                type: "POST",
                url: "@Url.Action("GetUserInfoJson", "Users")",
                data: {
                    userName: "@User.Identity.Name"
                },
                success: function(user) {
                    if (user.itNotWatched === "True") {
                        userItNotWatched = true;
                    } else {
                        userItNotWatched = false;
                    }
                }
            });
        });

        var tag = document.createElement('script');

        tag.src = "https://www.youtube.com/iframe_api";
        var firstScriptTag = document.getElementsByTagName('script')[0];
        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

        var player;
        var videoDuration;
        var done = false;
        var timesWatch = 1;

        function onPlayerReady(event) {
            videoDuration = player.getDuration();
            $("#player").contents().find("a.ytp-watermark").empty();
        }

        function chatOn() {
            $.connection.Chat.server.chatStatus(@Model.Id, true);
        }

        function chatOff() {
            $.connection.Chat.server.chatStatus(@Model.Id, false);
        }

        function onYouTubeIframeAPIReady() {
            var videoId = '@Model.Url'.replace("https://www.youtube.com/watch?v=", "");
            videoId = videoId.replace("https://www.youtube.com/embed/", "");
            player = new YT.Player('player', {
                height: '390',
                width: '640',
                videoId: videoId,
                playerVars: {
                    modestbranding: 1,
                    autoplay: 1,
                    fs: 1,
                    iv_load_policy: 3,
                    rel: 0,
                    showinfo: 0,
                    controls: 1
                },
                events: {
                    onReady: onPlayerReady,
                    onStateChange: onPlayerStateChange
                }
            });
        }

        function setWatchRole() {
            $.ajax({
                type: "POST",
                data: {
                    userName: "@User.Identity.Name"
                },
                url: "@Url.Action("SetWatchRole", "Users")",
                success: function(json) {
                    window.notify(json);
                },
                error: function() {
                    window.notify({ type: '@AlertStyles.Danger' });
                }
            });
        }

        function onPlayerStateChange(event) {
            var curentTime = event.target.getCurrentTime();
            if (event.data === YT.PlayerState.ENDED && curentTime >= videoDuration - 3 && userItNotWatched) {
                setWatchRole();
            }
        }
    </script>
}
