@using System.Reflection
@using bbom.Admin.Core.Extensions
@using bbom.Data.ModelPartials
@using bbom.Data.ModelPartials.Constants
<style type="text/css">
    /*первый*/ .first-my {
    }

        .first-my .result span {
            /*padding: 22px 12px 15px;*/
            display: inline-block;
            /*margin: 0 8px 0 -5px;*/
            font-size: 20px;
            border-radius: 3px;
        }

        .first-my .result {
        }

        .first-my .titles {
            position: relative;
            height: 0;
            right: -15px;
        }

            .first-my .titles span {
                font-size: 10px;
                position: relative;
                top: 12px;
            }

                .first-my .titles span.mm {
                    right: 18px;
                }

                .first-my .titles span.hh {
                    right: 40px;
                }

                .first-my .titles span.dd {
                    right: 62px;
                }

        .first-my p.titloftimer {
            font-size: 20px;
            font-family: calibri;
            margin: 0 auto;
            position: relative;
        }

    .clearf {
        visibility: hidden;
        display: block;
        font-size: 0;
        content: " ";
        clear: both;
        height: 0;
    }
    /*ресет*/

    .timerhello span {
        margin: 0;
        padding: 0;
        border: 0;
        font-size: 100%;
        font: inherit;
        vertical-align: baseline;
    }

    .timerhello p {
        font-size: 100%;
        font: inherit;
        color: #191919;
        font-family: Verdana, sans-serif;
        font-size: 13px;
        margin: 0 0 10px 0;
        line-height: 17px;
    }

    p.hellotimercopy {
        display: none !important;
    }
</style>
<div id="sidebar-collapse" class="col-sm-3 col-lg-2 sidebar">
    @*<form role="search">
            <div class="form-group">
                <input type="text" class="form-control" placeholder="Search">
            </div>
        </form>*@
    <ul id="menuPlace" class="nav menu" style="margin-top: 20px">
        <li id="starBuisnesButton" style="display: none"><a href="@Url.Action("FirstStep", "StartBuisnes")" style="margin-left: 28px; margin-right: 28px; margin-bottom: 10px;" role="button" class="btn btn-danger">Начать бизнес!</a></li>
        <li id="contactButton"><a href="@Url.Action("Contact", "Home")" style="margin-left: 28px; margin-right: 28px; margin-bottom: 10px;" role="button" class="btn btn-danger">Контакты</a></li>
        @*<li><a href="@Url.Action("Index", "PersonalPageCreator")"><svg class="glyph stroked eye"><use xlink:href="#stroked-eye"></use></svg>Создать сайт!</a></li>
            <li><a href="@Url.Action("Events", "Home")"><svg class="glyph stroked video"><use xlink:href="#stroked-video"></use></svg>Мероприятия</a></li>
            <li><a href="@Url.Action("Archive", "Home")"><svg class="glyph stroked video"><use xlink:href="#stroked-video"></use></svg>Архив</a></li>
            <li><a href="@Url.Action("Trainings", "Home")"><svg class="glyph stroked video"><use xlink:href="#stroked-video"></use></svg>Тренинги</a></li>
            <li><a href="@Url.Action("Calendar", "Home")"><svg class="glyph stroked calendar"><use xlink:href="#stroked-calendar"></use></svg>Календарь</a></li>
            <li><a href="@Url.Action("Dashboard", "Home")"><svg class="glyph stroked dashboard-dial"><use xlink:href="#stroked-dashboard-dial"></use></svg>Статистика</a></li>
            <li><a href="@Url.Action("Users", "Home")"><svg class="glyph stroked male user"><use xlink:href="#stroked-male-user"></use></svg>Структура</a></li>
            <li><a href="@Url.Action("Settings", "Home")"><svg class="glyph stroked calendar"><use xlink:href="#stroked-gear"></use></svg>Настройки</a></li>*@
        <div id="lastEventPlace" class="col-md-6" style="margin-top: 15px; visibility: hidden; width: 100%">
            <div class="panel panel-teal">
                <div class="panel-heading dark-overlay">Ближайшее событие</div>
                <div class="panel-body" style="text-align: center;">
                    <p id="lastEventTitle"></p>
                    <div class="first-my timerhello timerhello_183">
                        <div class="first-my-content">
                            <p class="titloftimer"></p>
                            <p class="result">
                                <span id="Nhour" class="result-hour" style="color: rgb(255, 255, 255);"></span><span>:</span>
                                <span id="Nmin" class="result-minute" style="color: rgb(255, 255, 255);"></span><span>:</span>
                                <span id="Nsec" class="result-second" style="color: rgb(255, 255, 255);"></span>
                            </p>
                            <div class="clearf"></div>
                        </div>
                    </div>
                    <a id="linkToEvent" class="btn btn-2 btn-2h" href="">Смотреть</a>
                </div>
            </div>
        </div><!--/.col-->
    </ul>
    <div style="position: absolute;bottom: 2px;left: 4px;">@ViewContext.Controller.GetType().Assembly.GetName().Version</div>
</div>
<script src="../../Scripts/Views/Timer.js"></script>
<script id="menuTmpl" type="text/x-jquery-tmpl">
    <li id="menu${order}">
        {{if exParam != null}}
        <a href="/${controller}/${action}/${exParam}">
            {{else}}
            <a href="/${controller}/${action}">
                {{/if}}
                <svg class="${discription}">
                    <use xlink:href="${icon}"></use>
                </svg>${name}
            </a>
    </li>
</script>
<script>
    var handle;
    var timer = new Timer($("#Nhour"), $("#Nmin"), $("#Nsec"));

    $(document).ready(function() {
        if (window.userIsRole('@UserRole.NotUser') && !window.userIsRole('@UserRole.NotWatch')) {
            $("#starBuisnesButton").css("display", "block");
        }

        $("#mainSiteUrl").attr('href', window.GetUrl('@User.GetUserName()', ''));

        $.connection.event.client.refreshEvent = function() {
            refreshNEvent();
        };

        $.connection.Chat.client.updateStartBisnesButton = function () {
            $("#starBuisnesButton").css("display", "block");
        };

        //получение события при обновлении страницы
        refreshNEvent();

        $.ajax({
            type: "GET",
            url: "@Url.Action("GetUserAlowMenu", "Access")",
            success: function (json) {
                var urlPage = '@Request.Url.PathAndQuery';
                for (var i = 0; i < json.length; i++) {
                    $('#menuTmpl').tmpl(json[i]).insertBefore('#lastEventPlace');
                    var urlMenu = "/" + json[i].controller + "/" + json[i].action;
                    if (json[i].exParam != null) {
                        urlMenu += "/" + json[i].exParam;
                    }
                    var menu = $('#menu' + json[i].order);
                    if (urlPage === urlMenu)
                        menu.attr("class", "active");
                    else
                        menu.attr("class", "");
                    if (!json[i].isActive){
                        menu.addClass('disabled');
                        $('#menu' + json[i].order + '>a').removeAttr('href');
                    }
                }
            }
        });
    });

    function refreshNEvent() {
        $.ajax({
            type: "GET",
            url: "@Url.Action("GetLastJson", "Events")",
            success: function(data) {
                if ((data.title !== null || data.start !== null) && data !== "") {
                    $("#lastEventPlace").css("visibility", "visible");
                    $("#linkToEvent").attr("href", "@Url.Action("Index", "Events")" + "?id=" + data.name);
                    $("#lastEventTitle").text(data.title + " " + data.start);
                    //timer
                    timer.start(data.start);
                } else {
                    $("#lastEventPlace").css("visibility", "collapse");
                }
            },
            error: function() {
                $("#lastEventPlace").css("visibility", "collapse");
            }
        });
    }

    function getfrominputs(string) {
        if (handle != null)
            clearInterval(handle);
        timer.getTimer(string);
        handle = setInterval(function () { timer.getTimer(string); }, 1000);
    }
</script>
